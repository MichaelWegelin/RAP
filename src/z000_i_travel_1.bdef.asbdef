managed implementation in class zbp_000_travel_1 unique;
strict ( 2 );

define behavior for Z000_I_TRAVEL_1 alias Travel
persistent table z000_travel
lock master
early numbering
authorization master ( instance )
//etag master <field_name>
{
  create;
  update;
  delete;

  // administrative fields: read only
  field ( readonly ) LastChangedAt, LastChangedBy, CreatedAt, CreatedBy;

  // mandatory fields that are required to create a travel
  field ( mandatory ) AgencyId, CustomerId, BeginDate, EndDate, OverallStatus, BookingFee, CurrencyCode;

  // Semantic Key field, which is readonly for the consumer, value is assigned in early numbering
  field ( readonly ) TravelID;

  // validations
  validation validateCustomer on save { create; field CustomerId; }
  validation validateAgency on save { create; field AgencyId; }
  validation validateDates on save { create; field BeginDate, EndDate; }
  validation validateStatus on save { create; field OverallStatus; }
  validation validateCurrencyCode on save { create; field CurrencyCode; }
  validation validateBookingFee   on save { create; field BookingFee; }

  // instance action and dynamic action control
  action ( features : instance ) acceptTravel result [1] $self;
  action ( features : instance ) rejectTravel result [1] $self;

  // internal action that is called by determinations
  internal action ReCalcTotalPrice;

  // determination
   determination calculateTotalPrice on modify { create; field BookingFee, CurrencyCode; }


  association _Booking { create ( features : instance ); }

  mapping for z000_travel
    {
      AgencyID      = agency_id;
      BeginDate     = begin_date;
      BookingFee    = booking_fee;
      CreatedAt     = created_at;
      CreatedBy     = created_by;
      CurrencyCode  = currency_code;
      CustomerID    = customer_id;
      Description   = description;
      EndDate       = end_date;
      LastChangedAt = last_changed_at;
      LastChangedBy = last_changed_by;
      OverallStatus = overall_status;
      TotalPrice    = total_price;
      TravelID      = travel_id;
    }
}

define behavior for Z000_I_BOOKING_1 alias Booking
persistent table z000_booking
lock dependent by _Travel
early numbering
authorization dependent by _Travel
//etag master <field_name>
{
  update;
  delete;
  field ( readonly ) TravelID, BookingID;
  association _Travel;

  mapping for z000_booking
    {
      AirlineID     = carrier_id;
      BookingDate   = booking_date;
      BookingID     = booking_id;
      BookingStatus = booking_status;
      ConnectionID  = connection_id;
      CurrencyCode  = currency_code;
      CustomerID    = customer_id;
      FlightDate    = flight_date;
      FlightPrice   = flight_price;
      LastChangedAt = last_changed_at;
      TravelID      = travel_id;
    }
}